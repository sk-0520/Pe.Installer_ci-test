name: Release Build

on: push

env:
  SOLUTION_PATH: Source\Pe.Installer.sln
  OUTPUT_PATH: Source/Pe.Installer/bin/x86/Release/Pe.Installer.exe
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:

  build:

    runs-on: windows-2022

    steps:
      - name: <Checkout> Repository
        uses: actions/checkout@v3

      - name: <Cache> Nuget
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-


      - name: <Add> msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: <Restore> Application
        shell: cmd
        run: |
          nuget restore ${{ env.SOLUTION_PATH }}

      - name: <Build> Application
        shell: cmd
        run: |
          msbuild ${{ env.SOLUTION_PATH }} /t:Build /p:Configuration=Release
          tree

      - name: <Artifact> Application
        uses: actions/upload-artifact@v3
        with:
          name: Pe.Installer
          path: ${{ env.OUTPUT_PATH }}

  deploy:

    needs: build

    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/ci-test'

    runs-on: windows-2022

    steps:
      - name: <Download> Application
        uses: actions/download-artifact@v3
        with:
          name: Pe.Installer
          path: Pe.Installer

      - name: <Read> Version
        id: version
        shell: pwsh
        run: |
          $version = (Get-Item Pe.Installer\Pe.Installer.exe).VersionInfo.FileVersion
          Write-Output "dot=$version" > $env:GITHUB_OUTPUT

      - name: <Delete> TEST Tag
        if: github.ref != 'refs/heads/master'
        continue-on-error: true
        uses: ClementTsang/delete-tag-and-release@v0.4.0
        with:
          delete_release: true
          tag_name: ${{ steps.version.outputs.dot }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: <Create> Release
        uses: actions/github-script@v7
        with:
          script: |
            const releaseResult = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              generate_release_notes: true,
              name: '${{ steps.version.outputs.dot }}',
              tag_name: '${{ steps.version.outputs.dot }}',
            });
            return releaseResult['data']['id'];

      - name: <Upload> Application
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Pe.Installer/Pe.Installer.exe
          file_glob: false
          tag: ${{ steps.version.outputs.dot }}
